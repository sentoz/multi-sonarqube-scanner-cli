name: Docker Image CI

on:
  schedule:
    - cron: '30 14 * * *'
  push:
    tags: 
      - '*.**.**'
    paths-ignore:
      - '**.md'
      - '**.png'
      - '**.jpg'
      - '**.svg'
      - '**.yaml'
      - CNAME
      - LICENSE

jobs:
  build_base_images_focal:
    name: Building a basic docker image on focal
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:

      - &check_repo
        name: Check out the repo
        uses: actions/checkout@v3

      - &login_dockerhub
        name: Log in to Docker Hub Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - &login_ghrc
        name: Log in to GitHub Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-base-focal
      - name: Build and push Docker base focal
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.base-focal

  build_base_images_jammy:
    name: Building a basic docker image on jammy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - *check_repo

      - *login_dockerhub

      - *login_ghrc

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-base-jammy

      - name: Build and push Docker base jammy
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.base-jammy

  build_standart_image:
    needs: [ build_base_images_jammy ]
    name: Build standart image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - *check_repo

      - *login_dockerhub

      - *login_ghrc

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile

  build_gradle_733_image:
    needs: [ build_base_images_jammy ]
    name: Build Gradle 7.3.3 image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - *check_repo

      - *login_dockerhub

      - *login_ghrc

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-gradle-7.3.3

      - name: Build and push Docker Gradle 7.3.3
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.gradle-7.3.3

  build_gradle_811_image:
    needs: [ build_base_images_jammy ]
    name: Build Gradle 8.1.1 image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - *check_repo

      - *login_dockerhub

      - *login_ghrc

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-gradle-8.1.1

      - name: Build and push Docker Gradle 8.1.1
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.gradle-8.1.1

  build_dotnet_31_image:
    needs: [ build_base_images_focal ]
    name: Build .Net 3.1 image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - *check_repo

      - *login_dockerhub

      - *login_ghrc

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-dotnet-3.1

      - name: Build and push Docker .Net-3.1
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.dotnet-3.1

  build_dotnet_5_image:
    needs: [ build_base_images_focal ]
    name: Build .Net 5.0 image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - *check_repo

      - *login_dockerhub

      - *login_ghrc

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-dotnet-5.0

      - name: Build and push Docker .Net-5.0
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}-dotnet-5.0
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.dotnet-5.0

  build_dotnet_6_image:
    needs: [ build_base_images_jammy ]
    name: Build .Net 6.0 image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - *check_repo

      - *login_dockerhub

      - *login_ghrc

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-dotnet-6.0

      - name: Build and push Docker .Net-6.0
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.dotnet-6.0

  build_dotnet_7_image:
    needs: [ build_base_images_jammy ]
    name: Build .Net 7.0 image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - *check_repo

      - *login_dockerhub

      - *login_ghrc

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-dotnet-7.0

      - name: Build and push Docker .Net-7.0
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.dotnet-7.0

  release:
    needs:
      - build_standart_image
      - build_gradle_733_image
      - build_gradle_811_image
      - build_dotnet_31_image
      - build_dotnet_5_image
      - build_dotnet_6_image
      - build_dotnet_7_image
    name: Release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Set env
        id: env
        run: |
          echo ::set-output name=PROJECT_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=PROJECT_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=PROJECT_TAG::${GITHUB_REF#refs/tags/}
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Standart image:

            * `docker pull ghcr.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}`
            * `docker pull docker.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}`

            Gradle images:

            * `docker pull ghcr.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-gradle-7.3.3`
            * `docker pull ghcr.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-gradle-8.1.1`

            * `docker pull docker.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-gradle-7.3.3`
            * `docker pull docker.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-gradle-8.1.1`

            .Net images:

            * `docker pull ghcr.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-dotnet-3.1`
            * `docker pull ghcr.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-dotnet-5.0`
            * `docker pull ghcr.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-dotnet-6.0`
            * `docker pull ghcr.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-dotnet-7.0`

            * `docker pull docker.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-dotnet-3.1`
            * `docker pull docker.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-dotnet-5.0`
            * `docker pull docker.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-dotnet-6.0`
            * `docker pull docker.io/sentoz/:${{ steps.env.outputs.PROJECT_TAG }}-dotnet-7.0`

          draft: false
          prerelease: false